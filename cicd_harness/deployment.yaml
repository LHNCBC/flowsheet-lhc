---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: $CI_PROJECT_NAME
  namespace: $KUBE_NAMESPACE
  labels:
    version: "$VERSION"
spec:
  replicas: $K8S_REPLICAS 
  selector:
    matchLabels:
      app: $CI_PROJECT_NAME 
      tier: web
  template:
    metadata:
      annotations:
        fluentbit.io/parser_stdout-$CI_PROJECT_NAME: nginx
      labels:
        app: $CI_PROJECT_NAME
        tier: web
    spec:
      containers:
      - name: $CI_PROJECT_NAME 
        image: 627111370606.dkr.ecr.us-east-1.amazonaws.com/$CI_PROJECT_NAME:$VERSION
        imagePullPolicy: Always
        volumeMounts:
        - name: sslcert
          mountPath: "/etc/nginx/ssl"
          readOnly: true
        ports:
        - containerPort: 443
          name: https
        - containerPort: 80
          name: http
        readinessProbe:
          httpGet:
            path: /
            scheme: HTTPS 
            port: 443
          initialDelaySeconds: 45
          periodSeconds: 10
        resources:
          limits:
            cpu: 800m
            memory: 1Gi
          requests:
            cpu: 400m
            memory: 500Mi
      nodeSelector:
        cluster: $CI_ENVIRONMENT_SLUG
      volumes:
       - name: sslcert
         secret:
           secretName: sslcert
---
apiVersion: v1
kind: Service
metadata:
  name: $CI_PROJECT_NAME 
  namespace: $KUBE_NAMESPACE
  labels:
    app: $CI_PROJECT_NAME 
    tier: web
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-access-log-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-access-log-s3-bucket-name: ${AWS_ELB_ACCESSLOG_BUCKET}
    service.beta.kubernetes.io/aws-load-balancer-access-log-s3-bucket-prefix: "$CI_PROJECT_NAME"
    service.beta.kubernetes.io/aws-load-balancer-access-log-emit-interval: "60"
spec:
  type: NodePort
  selector:
    app: $CI_PROJECT_NAME 
    tier: web
  ports:
    - name: https
      port: 443
      targetPort: 443
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: $CI_PROJECT_NAME
  namespace: $KUBE_NAMESPACE
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/group.name: alb.misc-$CI_ENVIRONMENT_SLUG
    alb.ingress.kubernetes.io/group.order: '54'
    external-dns.alpha.kubernetes.io/hostname: $EXT_DNS
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    external-dns.alpha.kubernetes.io/ingress-hostname-source: annotation-only
    alb.ingress.kubernetes.io/ip-address-type: dualstack
    alb.ingress.kubernetes.io/certificate-arn: $AWS_SSL_ARN 
    alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-TLS-1-2-2017-01 
    alb.ingress.kubernetes.io/security-groups: $AWS_EKS_ALB_SG
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80},{"HTTPS":443}]'
    alb.ingress.kubernetes.io/backend-protocol: HTTPS
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTPS
    alb.ingress.kubernetes.io/success-codes: 200,301,302
spec:
  rules:
  - host: $EXT_DNS
    http: &backend
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: ssl-redirect
              port:
                name: use-annotation
        - path: /
          pathType: Prefix
          backend:
            service:
              name: $CI_PROJECT_NAME 
              port:
                number: 443
  - host: $EXT_DNS_ALIAS
    http: *backend
